{
  "contractName": "ConsumerRole",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    }
  ],
  "bytecode": "0x6080604052348015600f57600080fd5b50603580601d6000396000f3fe6080604052600080fdfea165627a7a72305820ec74136a42ae185c17df67d56aea4008293d30f4b53f97a06aadff333e3ea6090029",
  "deployedBytecode": "0x6080604052600080fdfea165627a7a72305820ec74136a42ae185c17df67d56aea4008293d30f4b53f97a06aadff333e3ea6090029",
  "sourceMap": "155:1112:1:-;;;411:31;8:9:-1;5:2;;;30:1;27;20:12;5:2;411:31:1;155:1112;;;;;;",
  "deployedSourceMap": "155:1112:1:-;;;;;",
  "source": "pragma solidity ^0.5.0;\n\n// Import the library 'Roles'\nimport \"./Roles.sol\";\n\n// Define a contract 'ConsumerRole' to manage this role - add, remove, check\ncontract ConsumerRole {\n\n  // Define 2 events, one for Adding, and other for Removing\n\n  // Define a struct 'consumers' by inheriting from 'Roles' library, struct Role\n\n  // In the constructor make the address that deploys this contract the 1st consumer\n  constructor() public {\n    \n  }\n\n  // Define a modifier that checks to see if msg.sender has the appropriate role\n  modifier onlyConsumer() {\n    \n    _;\n  }\n/* \n  // Define a function 'isConsumer' to check this role\n  function isConsumer(address account) public view returns (bool) {\n    \n  }\n\n  // Define a function 'addConsumer' that adds this role\n  function addConsumer(address account) public onlyConsumer {\n    \n  }\n\n  // Define a function 'renounceConsumer' to renounce this role\n  function renounceConsumer() public {\n    \n  }\n\n  // Define an internal function '_addConsumer' to add this role, called by 'addConsumer'\n  function _addConsumer(address account) internal {\n    \n  }\n\n  // Define an internal function '_removeConsumer' to remove this role, called by 'removeConsumer'\n  function _removeConsumer(address account) internal {\n    \n  } */\n}",
  "sourcePath": "C:/Users/Hadeel/Desktop/Architect a Blockchain Supply Chain Solution/Part B/Project-6b/Project-6b/project-6/contracts/coffeeaccesscontrol/ConsumerRole.sol",
  "ast": {
    "absolutePath": "/C/Users/Hadeel/Desktop/Architect a Blockchain Supply Chain Solution/Part B/Project-6b/Project-6b/project-6/contracts/coffeeaccesscontrol/ConsumerRole.sol",
    "exportedSymbols": {
      "ConsumerRole": [
        68
      ]
    },
    "id": 69,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/C/Users/Hadeel/Desktop/Architect a Blockchain Supply Chain Solution/Part B/Project-6b/Project-6b/project-6/contracts/coffeeaccesscontrol/Roles.sol",
        "file": "./Roles.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 69,
        "sourceUnit": 290,
        "src": "55:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 68,
        "linearizedBaseContracts": [
          68
        ],
        "name": "ConsumerRole",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "432:10:1",
              "statements": []
            },
            "documentation": null,
            "id": 63,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "422:2:1"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "432:0:1"
            },
            "scope": 68,
            "src": "411:31:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "551:17:1",
              "statements": [
                {
                  "id": 65,
                  "nodeType": "PlaceholderStatement",
                  "src": "562:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 67,
            "name": "onlyConsumer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "548:2:1"
            },
            "src": "527:41:1",
            "visibility": "internal"
          }
        ],
        "scope": 69,
        "src": "155:1112:1"
      }
    ],
    "src": "0:1267:1"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Hadeel/Desktop/Architect a Blockchain Supply Chain Solution/Part B/Project-6b/Project-6b/project-6/contracts/coffeeaccesscontrol/ConsumerRole.sol",
    "exportedSymbols": {
      "ConsumerRole": [
        68
      ]
    },
    "id": 69,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/C/Users/Hadeel/Desktop/Architect a Blockchain Supply Chain Solution/Part B/Project-6b/Project-6b/project-6/contracts/coffeeaccesscontrol/Roles.sol",
        "file": "./Roles.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 69,
        "sourceUnit": 290,
        "src": "55:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 68,
        "linearizedBaseContracts": [
          68
        ],
        "name": "ConsumerRole",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "432:10:1",
              "statements": []
            },
            "documentation": null,
            "id": 63,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "422:2:1"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "432:0:1"
            },
            "scope": 68,
            "src": "411:31:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "551:17:1",
              "statements": [
                {
                  "id": 65,
                  "nodeType": "PlaceholderStatement",
                  "src": "562:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 67,
            "name": "onlyConsumer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "548:2:1"
            },
            "src": "527:41:1",
            "visibility": "internal"
          }
        ],
        "scope": 69,
        "src": "155:1112:1"
      }
    ],
    "src": "0:1267:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xC35fa4095fB798f4039125EbA30473d260940edD",
      "transactionHash": "0x5b5c43dac0020ff287006637b81e25a6120666704cc3a307d673cc0900508561"
    },
    "1550968687169": {
      "events": {},
      "links": {},
      "address": "0xeD83fC14841D1358D5723dFD9b406e79ac478b6f",
      "transactionHash": "0xa018e88bffa8b5d7109c087a1b6c95f4b8dd4b10c502f2bb2e5ba63b7cb16bce"
    },
    "1551559738584": {
      "events": {},
      "links": {},
      "address": "0xBaF711AC5ADc86884d8A4A2ea6732839e2fb46bD",
      "transactionHash": "0xd819379ba378dbe92e737585ea8088964f98fcd39e3fa15b1689084b0dc9df6e"
    },
    "1552079322179": {
      "events": {},
      "links": {},
      "address": "0x392BC747c73d27EFE925F5fBCe0504Af6a92ae33",
      "transactionHash": "0x03edb3fb568734340fc4d4f6f7cd6cd029444840f8e2dbab1ed8129803aa7fbc"
    },
    "1552087151559": {
      "events": {},
      "links": {},
      "address": "0x4e86597F4f95bD4e1C373960fe0271e0ed850637",
      "transactionHash": "0xd809f1c7e89b902bcbad5484f1c33237e5c1a26afbca70bcbde8bd8c26f81ed6"
    },
    "1552088110894": {
      "events": {},
      "links": {},
      "address": "0xd19F095f2EE1d2dE7c1Bc0643BD7EB28Ba143f5B",
      "transactionHash": "0x9af788ca1d09947b40899d72c4379299f733532980156b4c7124b767edf232ab"
    },
    "1552090408575": {
      "events": {},
      "links": {},
      "address": "0x10386b651c4689AEB4C6C1ce9249ce5c32054709",
      "transactionHash": "0xbc36f49a38b24c20b55a209ffa6908f9194a75b8f9b5584672163f87036ef08f"
    },
    "1552091194344": {
      "events": {},
      "links": {},
      "address": "0x1Cb72e2E9bc9152fA12685Fc3d1c3FFEDd2db32e",
      "transactionHash": "0x15dc456ee9717a8b7d2e44122b739257cac06aad07063f1d73bc963a6899d06b"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-03-10T19:45:48.499Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}